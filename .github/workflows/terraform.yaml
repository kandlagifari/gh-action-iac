name: Terraform Infrastructure Change Management Pipeline

on:
  push:
    branches:
    - main
  pull_request:
    branches:
    - main

permissions:
  issues: write     # This is required for creating new issue
  id-token: write   # This is required for requesting the JWT
  contents: read    # This is required for actions/checkout

jobs:
  Terraform-Workflow:
    runs-on: ubuntu-latest
    env:
      AWS_REGION: ${{ vars.AWS_REGION }} 
      GH_ACTION_ASSUME_ROLE: ${{ vars.GH_ACTION_ASSUME_ROLE }}
      GH_ACTION_SESSION_NAME: ${{ vars.GH_ACTION_SESSION_NAME }}

    steps:
    - name: Checkout the repository to the runner
      uses: actions/checkout@v4

    - name: Setup Terraform with specified version on the runner
      uses: hashicorp/setup-terraform@v2
      with:
        terraform_version: 1.3.2
    
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v4.0.2
      with:
        role-to-assume: ${{ env.GH_ACTION_ASSUME_ROLE }}
        role-session-name: ${{ env.GH_ACTION_SESSION_NAME }}
        aws-region: ${{ env.AWS_REGION }}

    - name: STS get caller identity
      run: |
        aws sts get-caller-identity
    
    - name: Terraform init
      id: init
      run: |
        cd ./environments/personal
        terraform init
    
    # - name: Terraform plan
    #   id: plan
    #   # if: github.event_name == 'pull_request'
    #   run: |
    #     cd ./environments/personal
    #     terraform plan -input=false
    #   continue-on-error: true
      
    # - name: Terraform Plan Status
    #   if: steps.plan.outcome == 'failure'
    #   run: exit 1
    
    # - name: Manual Approval
    #   uses: trstringer/manual-approval@v1
    #   with:
    #     secret: ${{ github.TOKEN }}
    #     approvers: kandlagifari
    #     minimum-approvals: 1
    #     issue-title: "Deploying to Personal Environment"
    #     issue-body: "Review the terraform plan, then approve or deny the deployment to Personal Environment."
    #     exclude-workflow-initiator-as-approver: false

    # - name: Terraform Apply
    #   if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    #   run: |
    #     cd ./environments/personal
    #     terraform apply -auto-approve -input=false
    
    - name: Terraform destroy
      id: destroy
      run: |
        cd ./environments/personal
        terraform destroy -auto-approve -input=false
    
    - name: Terraform state list
      id: state
      run: |
        cd ./environments/personal
        terraform state list
